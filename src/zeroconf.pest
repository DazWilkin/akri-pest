// ZeroConf
// Service Filtering
// E.g. { name: "hades-canyon", kind: "_http._tcp", domain: "local", host_name: "hades-canyon.local", address: "10.1.49.1", port: 8080, txt: ... }
// NB `host_name` may always be represented by `name` and `domain`

// DNS (!) permitted name parts
// It's permitted to use hyphens but these must occur at most once (!) between alphanumeric
name = { ASCII_ALPHANUMERIC ~ ( ( ASCII_ALPHANUMERIC ~ HYPHEN ~ ASCII_ALPHANUMERIC ) | ASCII_ALPHANUMERIC )* }
full_name = _{ "name=\"" ~ name ~ "\"" }

domain = { ASCII_ALPHA_LOWER+ }
full_domain = _{ "domain=\"" ~ domain ~ "\"" }

// It may be redundant to define these as constants!?
tcp = { "tcp" }
udp = { "udp" }
sctp = { "sctp" }

// Kubernetes (my destination) only permits these protocols
protocol = { tcp | udp | sctp }
full_protocol = _{ "_" ~ protocol }

stype = { ASCII_ALPHA_LOWER+ }
full_stype = _{ "_" ~ stype }

// For example `_http._tcp`, `_rust._udp`
kind = {  full_stype ~ "." ~ full_protocol }
full_kind = _{ "kind=\"" ~ kind ~ "\"" }

// Although numberic, wrapping in quotes to help delimit
// Otherwise `123456` is matched as `12345` and the `6` is swallowed silently
port = { ASCII_DIGIT{1,5} }
full_port = _{ "port=\"" ~ port ~ "\"" }

term = _{ full_kind | full_domain | full_name | full_port }

// Permits repetition but doesn't eliminate duplication
filter = { term ~ ( SPACE_SEPARATOR* ~ term )* }
